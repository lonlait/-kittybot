# app.py - Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è PythonAnywhere
import os
import logging
from flask import Flask, request
from telebot import TeleBot, types
import requests
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
secret_token = os.getenv('TOKEN')
if not secret_token:
    raise RuntimeError("TELEGRAM TOKEN not set in .env!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = TeleBot(token=secret_token)

# URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ—Ç–∏–∫–æ–≤
CAT_API_URL = 'https://api.thecatapi.com/v1/images/search'
DOG_API_URL = 'https://api.thedogapi.com/v1/images/search'

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)


def get_new_image():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞"""
    try:
        response = requests.get(CAT_API_URL, timeout=10)
        response.raise_for_status()
        data = response.json()
        if data and len(data) > 0:
            return data[0].get('url')
        else:
            raise Exception("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API")
    except Exception as error:
        logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç–∏–∫–∞: {error}")
        # –ü—Ä–æ–±—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π API
        try:
            response = requests.get(DOG_API_URL, timeout=10)
            response.raise_for_status()
            data = response.json()
            if data and len(data) > 0:
                return data[0].get('url')
        except Exception as backup_error:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {backup_error}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –æ–±–∞ API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
            return "https://via.placeholder.com/600x400?text=–ö–æ—Ç–∏–∫+—É–±–µ–∂–∞–ª+üòø"


@bot.message_handler(commands=['start'])
def wake_up(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    chat = message.chat
    name = message.chat.first_name
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    button_newcat = types.KeyboardButton('üê± –ù–æ–≤—ã–π –∫–æ—Ç–∏–∫')
    button_help = types.KeyboardButton('‚ùì –ü–æ–º–æ—â—å')
    keyboard.add(button_newcat, button_help)

    welcome_text = f"–ü—Ä–∏–≤–µ—Ç, {name}! üòä\n\n–Ø CatSuperpositionBot - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –º–∏–ª—ã—Ö –∫–æ—Ç–∏–∫–æ–≤! üêà\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É 'üê± –ù–æ–≤—ã–π –∫–æ—Ç–∏–∫' –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /newcat —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞."

    bot.send_message(
        chat_id=chat.id,
        text=welcome_text,
        reply_markup=keyboard,
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞
    cat_image = get_new_image()
    if cat_image:
        bot.send_photo(chat.id, cat_image, caption="–í–æ—Ç —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–æ—Ç–∏–∫! üê±")
    else:
        bot.send_message(chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ç–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@bot.message_handler(commands=['newcat'])
def new_cat(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /newcat"""
    chat = message.chat
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    loading_msg = bot.send_message(chat.id, "–ò—â—É –∫–æ—Ç–∏–∫–∞ –¥–ª—è —Ç–µ–±—è... üê±")
    
    cat_image = get_new_image()
    if cat_image:
        bot.delete_message(chat.id, loading_msg.message_id)
        bot.send_photo(chat.id, cat_image, caption="–í–æ—Ç —Ç–≤–æ–π –∫–æ—Ç–∏–∫! üê±")
    else:
        bot.edit_message_text(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ—Ç–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ! üòø",
            chat.id,
            loading_msg.message_id
        )


@bot.message_handler(commands=['help'])
def help_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üê± CatSuperpositionBot - –±–æ—Ç —Å –∫–æ—Ç–∏–∫–∞–º–∏!

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/newcat - –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–æ—Ç–∏–∫–∞
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "üê± –ù–æ–≤—ã–π –∫–æ—Ç–∏–∫" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /newcat!
    """
    bot.send_message(message.chat.id, help_text)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = message.text.lower()
    
    if text in ['üê± –Ω–æ–≤—ã–π –∫–æ—Ç–∏–∫', '–Ω–æ–≤—ã–π –∫–æ—Ç–∏–∫', '–∫–æ—Ç–∏–∫', '–∫–æ—Ç', 'cat']:
        new_cat(message)
    elif text in ['‚ùì –ø–æ–º–æ—â—å', '–ø–æ–º–æ—â—å', 'help']:
        help_command(message)
    else:
        bot.send_message(
            message.chat.id, 
            "–û—Ç–ø—Ä–∞–≤—å /newcat –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É 'üê± –ù–æ–≤—ã–π –∫–æ—Ç–∏–∫' —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ—Ç–∏–∫–∞! üê±"
        )


@app.route('/')
def home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return """
    <h1>üê± CatSuperpositionBot</h1>
    <p>Telegram –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ—Ç–∏–∫–æ–≤</p>
    <p>–ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram: <a href="https://t.me/CatSuperpositionBot">@CatSuperpositionBot</a></p>
    <p>–°—Ç–∞—Ç—É—Å: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç</p>
    """


@app.route('/webhook', methods=['POST'])
def webhook():
    """Webhook –¥–ª—è Telegram Bot API"""
    if request.method == 'POST':
        bot.process_new_updates([types.Update.de_json(request.stream.read().decode("utf-8"))])
        return 'ok', 200


@app.route('/set_webhook')
def set_webhook():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –Ω–∞ PythonAnywhere
        webhook_url = f"https://{os.getenv('PYTHONANYWHERE_SITE', 'yourusername.pythonanywhere.com')}/webhook"
        bot.set_webhook(url=webhook_url)
        return f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}"


@app.route('/remove_webhook')
def remove_webhook():
    """–£–¥–∞–ª–µ–Ω–∏–µ webhook"""
    try:
        bot.remove_webhook()
        return "Webhook —É–¥–∞–ª–µ–Ω"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}"


if __name__ == '__main__':
    logger.info("–ó–∞–ø—É—Å–∫ CatSuperpositionBot –Ω–∞ Flask...")
    # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
    bot.polling(none_stop=True, interval=0) 
